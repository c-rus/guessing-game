name: Build
on:
  workflow_dispatch:
  push:

env:
  TARGET: guessing-game

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux-x64
          - os: windows-latest
            platform: windows-x64
          - os: macos-latest
            platform: macos-x64

    runs-on: ${{ matrix.os }}
    steps:
      - name: Fetch repository
        uses: actions/checkout@v2

      - name: Configure rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Enable Cargo caching
        uses: Swatinem/rust-cache@v1

      - name: Build
        run: cargo build --release

      - name: Test
        run: cargo test

      - name: Compress binary executable for Unix
        if: ${{ runner.os == 'macOS' || runner.os == 'Linux' }}
        run: cd ./target/release && zip ./../../${{ env.TARGET }}-${{ matrix.platform }}.zip ${{ env.TARGET }}

      - name: Compress binary executable for Windows
        if: ${{ runner.os == 'Windows' }}
        run: cd ./target/release && powershell.exe "compress-archive ${{ env.TARGET }}.exe ./../../${{ env.TARGET }}-${{ matrix.platform }}.zip"

      - name: Upload ${{ matrix.platform }} artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.TARGET }}-${{ matrix.platform }}
          path: ./${{ env.TARGET }}-${{ matrix.platform }}.**

  integrity:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Fetch repository
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.x

      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Compute checksums
        run: echo "$(python ./tools/sum.py "./${{ env.TARGET }}-*.zip")" > ./checksum.txt

      - name: Review checksums
        run: cat ./checksum.txt

      - name: Upload checksums
        uses: actions/upload-artifact@v2
        with:
          name: checksum
          path: ./checksum.txt

  release:
    needs: [integrity]
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    steps:
      - name: Fetch repository
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Display filesystem contents
        run: ls -R

      - name: Upload releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: '**/${{ env.TARGET }}-*.zip,**/checksum.txt'
          bodyFile: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}

      